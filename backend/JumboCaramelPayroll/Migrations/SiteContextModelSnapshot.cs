// <auto-generated />
using System;
using JumboCaramelPayroll;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JumboCaramelPayroll.Migrations
{
    [DbContext(typeof(SiteContext))]
    partial class SiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JumboCaramelPayroll.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Birthdate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("RoleId");

                    b.Property<string>("SSN");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");

                    b.HasData(
                        new { EmployeeId = 1, Address = "123 Front street", Birthdate = new DateTime(2019, 7, 30, 0, 0, 0, 0, DateTimeKind.Local), Email = "Jon.Smith@gmail.com", FirstName = "Jon", LastName = "Smith", PhoneNumber = "216-867-5309", RoleId = 1, SSN = "200-300-5000" },
                        new { EmployeeId = 2, Address = "666 Mockingbird Lane", Birthdate = new DateTime(2019, 7, 30, 0, 0, 0, 0, DateTimeKind.Local), Email = "Joe.Carter@gmail.com", FirstName = "Joe", LastName = "Carter", PhoneNumber = "555-555-555", RoleId = 2, SSN = "200-310-5690" },
                        new { EmployeeId = 3, Address = "578 Elm Street", Birthdate = new DateTime(2019, 7, 30, 0, 0, 0, 0, DateTimeKind.Local), Email = "Fred.Johnson@yaho.com", FirstName = "Fred", LastName = "Johnson", PhoneNumber = "216-210-5310", RoleId = 2, SSN = "100-600-4000" },
                        new { EmployeeId = 4, Address = "3346 W. 4th", Birthdate = new DateTime(2019, 7, 30, 0, 0, 0, 0, DateTimeKind.Local), Email = "Jen.Morgan@hotmail.com", FirstName = "Jen", LastName = "Morgan", PhoneNumber = "440-551-5309", RoleId = 1, SSN = "001-003-5000" }
                    );
                });

            modelBuilder.Entity("JumboCaramelPayroll.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HourRate");

                    b.Property<decimal>("PayRate");

                    b.Property<string>("RoleName");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new { RoleId = 1, HourRate = 12, PayRate = 800m, RoleName = "Camera Operator" },
                        new { RoleId = 2, HourRate = 12, PayRate = 500m, RoleName = "First Assistant Camera" }
                    );
                });

            modelBuilder.Entity("JumboCaramelPayroll.Models.Employee", b =>
                {
                    b.HasOne("JumboCaramelPayroll.Models.Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
